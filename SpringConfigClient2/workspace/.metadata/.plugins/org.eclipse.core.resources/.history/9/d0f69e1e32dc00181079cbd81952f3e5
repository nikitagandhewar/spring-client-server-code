package com.scriptuit.ConfigServer;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.HttpClientBuilder;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@RestController

public class Json_Reader {

	String host = "";
	String port = "";
	String restUrl = "";

	@RequestMapping(value = "/auto-refresh/{client}", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_VALUE)
	public void readData(@PathVariable(value = "client") String client)
			throws FileNotFoundException, IOException, ParseException {

		JSONParser parser = new JSONParser();

		JSONObject jsonObject = (JSONObject) parser.parse(new FileReader("/opt/Client/ClientProperties.json"));

		HashMap<String, String> obj = new HashMap<>();

		Set set = jsonObject.keySet();

		Iterator itr = set.iterator();
		while (itr.hasNext()) {
			String key = itr.next().toString();

			if (client.equals(key)) {
				obj = (HashMap<String, String>) jsonObject.get(client);
				host = obj.get("host");
				port = obj.get("port");
			}

		}
		restUrl = "http://" + host + ":" + port + "/actuator/refresh";
		System.out.println("Url : " + restUrl);

		HttpPost post = new HttpPost(restUrl);
		post.setHeader("Content-Type", "application/json");

		HttpClient client1 = HttpClientBuilder.create().build();
		HttpResponse response = client1.execute(post);
		System.out.println("Response : " + response);

		int responseCode = response.getStatusLine().getStatusCode();
		System.out.println("Response Code : " + responseCode);

	}

}
